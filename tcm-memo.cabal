cabal-version:      2.2
category:           Example
build-type:         Simple
extra-source-files: README.md

name:               tcm-memo
version:            1.0.0.0

author:             Alex Washburn
maintainer:         github@recursion.ninja
copyright:          2018 Alex Washburn (recursion.ninja)
license:            BSD-3-Clause
license-file:       LICENSE
                    
synopsis:           A binding to a C++ hashtable for thread-safe memoization.

description:        This package is designed to provide a "minimal working example"
                    to test the cxx-sources and the cxx-options buildinfo flags.
                    The code was pulled out PCG, https://github.com/amnh/pcg

library

  -- Other library packages from which modules are imported.
  build-depends:    base       >=4.6.0.0
                  , deepseq
                  , hashable
                  , lens
                   -- For Arbitrary CULong instance
                  , QuickCheck >=2.10

  -- We must provide the full relative path to every C file that the project depends on.
  c-sources:        memoized-tcm/costMatrixWrapper.c
                    memoized-tcm/dynamicCharacterOperations.c

  cc-options:       --std=c11
                     
  cxx-sources:      memoized-tcm/costMatrix.cpp

  cxx-options:      --std=c++11

  default-language: Haskell2010

  -- Modules exported by the library.
  exposed-modules:  Bio.Character.Exportable.Class
                    Data.TCM.Memoized
                    Data.TCM.Memoized.FFI

  -- This library is required for the C++ standard template library.
  extra-libraries:  stdc++

  ghc-options:      -O2 -Wall

  hs-source-dirs:   src
                    
  -- Here we list all directories that contain C header files that the FFI tools will need
  -- to locate when preprocessing the C files. Without listing the directories containing
  -- the C header files here, the FFI preprocession (hsc2hs, c2hs,etc.) will fail to locate
  -- the requisite files.
  -- Note also, that the parent directory of the nessicary C header files must be specified.
  -- The preprocesser will not recursively look in subdirectories for C header files!
  include-dirs:     memoized-tcm


executable undependant-executable

  main-is:          Dependant.hs

  build-depends:    base >=4.6.0.0
                  , lens
                  , safe
                  , tcm-memo
                     
  default-language: Haskell2010

  ghc-options:      -O2 -Wall

  hs-source-dirs:   app


executable independant-executable

  main-is:          Independant.hs

  build-depends:    base >=4.6.0.0
                  , deepseq
                  , hashable
                  , lens
                   -- For Arbitrary CULong instance
                  , QuickCheck >=2.10
                  , safe

  -- We must provide the full relative path to every C file that the project depends on.
  c-sources:        memoized-tcm/costMatrixWrapper.c
                    memoized-tcm/dynamicCharacterOperations.c

  cc-options:       --std=c11
                     
  cxx-sources:      memoized-tcm/costMatrix.cpp

  cxx-options:      --std=c++11

  default-language: Haskell2010

  -- This library is required for the C++ standard template library.
  extra-libraries:  stdc++

  ghc-options:      -O2 -Wall

  hs-source-dirs:   app, src
                    
  -- Here we list all directories that contain C header files that the FFI tools will need
  -- to locate when preprocessing the C files. Without listing the directories containing
  -- the C header files here, the FFI preprocession (hsc2hs, c2hs,etc.) will fail to locate
  -- the requisite files.
  -- Note also, that the parent directory of the nessicary C header files must be specified.
  -- The preprocesser will not recursively look in subdirectories for C header files!
  include-dirs:     memoized-tcm

  -- Modules exported by the library.
  other-modules:    Bio.Character.Exportable.Class
                    Data.TCM.Memoized
                    Data.TCM.Memoized.FFI


benchmark benchmark-suite

  type:             exitcode-stdio-1.0

  main-is:          Bench.hs

  build-depends:    base >=4.6.0.0
                  , criterion
                  , deepseq
                  , hashable
                  , lens
                  , QuickCheck >=2.10
                     
  -- We must provide the full relative path to every C file that the project depends on.
  c-sources:        memoized-tcm/costMatrixWrapper.c
                    memoized-tcm/dynamicCharacterOperations.c

  cc-options:       --std=c11
                     
  cxx-sources:      memoized-tcm/costMatrix.cpp

  cxx-options:      --std=c++11

  default-language: Haskell2010

  -- This library is required for the C++ standard template library.
  extra-libraries:  stdc++

  ghc-options:      -O2 -Wall

  hs-source-dirs:   bench, src
                    
  -- Here we list all directories that contain C header files that the FFI tools will need
  -- to locate when preprocessing the C files. Without listing the directories containing
  -- the C header files here, the FFI preprocession (hsc2hs, c2hs,etc.) will fail to locate
  -- the requisite files.
  -- Note also, that the parent directory of the nessicary C header files must be specified.
  -- The preprocesser will not recursively look in subdirectories for C header files!
  include-dirs:     memoized-tcm

  -- Modules exported by the library.
  other-modules:    Bio.Character.Exportable.Class
                    Data.TCM.Memoized
                    Data.TCM.Memoized.FFI

 
test-suite testsuite

  main-is:          Test.hs

  type:             exitcode-stdio-1.0
  
  build-depends:    base >=4.6.0.0
                  , deepseq
                  , hashable
                  , lens
                  , QuickCheck >= 2.10
                     
  -- We must provide the full relative path to every C file that the project depends on.
  c-sources:        memoized-tcm/costMatrixWrapper.c
                    memoized-tcm/dynamicCharacterOperations.c

  cc-options:       --std=c11
                     
  cxx-sources:      memoized-tcm/costMatrix.cpp

  cxx-options:      --std=c++11

  default-language: Haskell2010

  -- This library is required for the C++ standard template library.
  extra-libraries:  stdc++

  ghc-options:      -O2 -Wall

  hs-source-dirs:   test, src
                    
  -- Here we list all directories that contain C header files that the FFI tools will need
  -- to locate when preprocessing the C files. Without listing the directories containing
  -- the C header files here, the FFI preprocession (hsc2hs, c2hs,etc.) will fail to locate
  -- the requisite files.
  -- Note also, that the parent directory of the nessicary C header files must be specified.
  -- The preprocesser will not recursively look in subdirectories for C header files!
  include-dirs:     memoized-tcm

  -- Modules exported by the library.
  other-modules:    Bio.Character.Exportable.Class
                    Data.TCM.Memoized
                    Data.TCM.Memoized.FFI